name: "EfficientNetv2 S Imagenette training + inference benchmark"
pipelines:
  - name: EfficientNetv2 S Imagenette inference
    inputs: [0]
    outputs: [2]
    dataset_stage_id: 0
    loadgen:
      component: loadgen.PoissonLoadScheduler
      max_queries: 200
      timeout: 30
      queue_depth: 10
      config:
        rate: 10 # average #requests/sec
    stages:
      - name: Load Imagenette samples from TorchVision Dataset
        id: 0
        outputs: [1]
        component: stages.torchvision_classification.TorchVisionDataLoader
        polling_policy: utils.queues.polling.SingleQueuePolicy
        disable_logs: false
        config:
          batch_size: 1
          preprocess: False
          preload: True
          num_workers: 0 # if 0 no prefetching else prefetches 2*num_workers samples
          dataset:
            component: torchvision.datasets.Imagenette
            split: [val]
      - name: Preprocess Imagenette data coming from DataLoader
        id: 1
        outputs: [2]
        component: stages.torchvision_classification.TorchVisionPreprocessFromWeights
        polling_policy: utils.queues.polling.SingleQueuePolicy
        disable_logs: false
        config:
          weights: EfficientNet_V2_S_Weights.IMAGENET1K_V1
      - name: EfficientNet inference
        id: 2
        outputs: []
        component: stages.torchvision_classification.TorchVisionClassification
        polling_policy: utils.queues.polling.SingleQueuePolicy
        disable_logs: false
        config:
          model: 
            component: torchvision.models.efficientnet_v2_s
            # model_checkpoint_path: "tmp/efficientnet_v2_imagenette.pth"
            replace_classifier: True
            num_classes: 10
          optimizer:
            component: torch.optim.Adam
            lr: 0.001
          criterion:
            component: torch.nn.CrossEntropyLoss
          device: cuda
  - name: EfficientNetv2 S Imagenette training
    inputs: [0]
    outputs: [2]
    dataset_stage_id: 0
    loadgen:
      component: loadgen.OfflineLoadScheduler
      max_queries: 200
      timeout: 30
      queue_depth: 10
      config:
        rate: 10 # average #requests/sec
    stages:
      - name: Load Imagenette samples from TorchVision Dataset
        id: 0
        outputs: [1]
        component: stages.torchvision_classification.TorchVisionDataLoader
        polling_policy: utils.queues.polling.SingleQueuePolicy
        disable_logs: false
        config:
          batch_size: 64
          preprocess: False
          preload: False
          num_workers: 4 # if 0 no prefetching else prefetches 2*num_workers samples
          dataset:
            component: torchvision.datasets.Imagenette
            split: [train]
      - name: Preprocess Imagenette data coming from DataLoader
        id: 1
        outputs: [2]
        component: stages.torchvision_classification.TorchVisionPreprocessFromWeights
        polling_policy: utils.queues.polling.SingleQueuePolicy
        disable_logs: false
        config:
          weights: EfficientNet_V2_S_Weights.IMAGENET1K_V1
      - name: EfficientNet training
        id: 2
        outputs: []
        component: stages.torchvision_classification.TorchVisionClassification
        polling_policy: utils.queues.polling.SingleQueuePolicy
        disable_logs: false
        config:
          model: 
            component: torchvision.models.efficientnet_v2_s
            # model_checkpoint_path: "tmp/efficientnet_v2_imagenette.pth"
            replace_classifier: True
            num_classes: 10
          optimizer:
            component: torch.optim.Adam
            lr: 0.001
          criterion:
            component: torch.nn.CrossEntropyLoss
          device: cuda